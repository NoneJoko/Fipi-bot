import requests
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, CallbackQueryHandler

# üîë –í—Å—Ç–∞–≤—å —Å–≤–æ–∏ –∫–ª—é—á–∏
TELEGRAM_TOKEN = "8338060279:AAHciQs3L88SZDgasBDYzIEt416zO9sxsrk"
SPOONACULAR_KEY = "9bac1711bfa749ddaa4ca9675cc17e5a"

# ===== API –ó–∞–ø—Ä–æ—Å—ã =====

def search_recipes(ingredients):
    url = "https://api.spoonacular.com/recipes/findByIngredients"
    params = {
        "ingredients": ingredients,
        "number": 3,  # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ü–µ–ø—Ç–æ–≤
        "ranking": 1,
        "apiKey": SPOONACULAR_KEY
    }
    r = requests.get(url, params=params)
    return r.json()

def get_recipe_info(recipe_id):
    url = f"https://api.spoonacular.com/recipes/{recipe_id}/information"
    params = {"apiKey": SPOONACULAR_KEY}
    r = requests.get(url, params=params)
    return r.json()

# ===== –•–µ–Ω–¥–ª–µ—Ä—ã =====

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üëã –ü—Ä–∏–≤–µ—Ç! –ù–∞–ø–∏—à–∏ —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é, –∏ —è –Ω–∞–π–¥—É —Ä–µ—Ü–µ–ø—Ç—ã.")

async def find_recipes(update: Update, context: ContextTypes.DEFAULT_TYPE):
    ingredients = update.message.text
    recipes = search_recipes(ingredients)

    if not recipes:
        await update.message.reply_text("üòî –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞—à—ë–ª, –ø–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥–∏–µ –ø—Ä–æ–¥—É–∫—Ç—ã.")
        return

    for recipe in recipes:
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton("üìñ –ü–æ–¥—Ä–æ–±–Ω–µ–µ", callback_data=str(recipe["id"]))]
        ])
        await update.message.reply_photo(
            photo=recipe["image"],
            caption=f"üç¥ {recipe['title']}",
            reply_markup=keyboard
        )

async def button_click(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()

    recipe_id = query.data
    info = get_recipe_info(recipe_id)

    ingredients = ", ".join([i["original"] for i in info["extendedIngredients"]])
    instructions = info.get("instructions", "ü§∑ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")

    text = (
        f"üç¥ {info['title']}\n\n"
        f"üõí –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:\n{ingredients}\n\n"
        f"üë©‚Äçüç≥ –ü—Ä–∏–≥–æ—Ç–æ–≤–ª–µ–Ω–∏–µ:\n{instructions}"
    )

    await query.edit_message_caption(caption=text)

# ===== –ó–∞–ø—É—Å–∫ =====

def main():
    app = Application.builder().token(TELEGRAM_TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, find_recipes))
    app.add_handler(CallbackQueryHandler(button_click))

    print("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    app.run_polling()

if name == "main":
    main()
